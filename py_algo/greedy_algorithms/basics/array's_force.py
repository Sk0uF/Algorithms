"""
Codemonk link: https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/arrays-force-easy-contest/

Let's consider some array A. The following algorithm calculates it's force:
1) Find all the continuous blocks where all the elemens of A are equal.
2) Calculate sum of squared lengths of these blocks.
For example if array A = {2, 3, 3, 1, 1, 1, 4, 2, 2} its force will be 12 + 22 + 32 + 12 + 22 = 19. We can reorder some
elements and get array with greater force. In the example above we can move the first element of A to the end and get
array A = {3, 3, 1, 1, 1, 4, 2, 2, 2} with force 22 + 32 + 12 + 32 = 23. You are given an array. What is the maximum
force you can get by reordering some of its elements?

Input - Output:
The first line contains integer T denoting the number of test cases.
The following T lines contain 4 integers each: A[0], A[1], N, MOD.
Array A of N elements is generated by the following way:
A[0], A[1] are given
A[i] = (A[i - 1] + A[i - 2]) modulo MOD for 1 < i < N.
For each test case output one integer on the separate line - answer for the question.

Sample input:
2
0 1 6 4
1 1 4 2

Sample Output:
12
10
"""

"""
Very easy problem. Think about it.

Final complexity: O(T*N)
"""

t = int(input())
for _ in range(t):
    a0, a1, n, mod = map(int, input().split())
    freq = {}
    freq[a0] = 1
    if a1 in freq:
        freq[a1] += 1
    else:
        freq[a1] = 1
    for i in range(2, n):
        temp = (a1 + a0) % mod
        a0, a1 = a1, temp
        if temp in freq:
            freq[temp] += 1
        else:
            freq[temp] = 1

    total = 0

    print(sum(elem ** 2 for elem in freq.values()))
